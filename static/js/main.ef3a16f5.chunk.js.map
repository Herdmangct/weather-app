{"version":3,"sources":["components/WeatherWidget/WeatherIcon.js","components/WeatherWidget/WeatherInfo.js","components/WeatherWidget/WeatherWidget.js","components/Form.js","components/GeneralComponents/Divider.js","components/WidgetEditor.js","API/weatherAPI.js","components/GeneralComponents/HeaderBar.js","App.js","serviceWorker.js","index.js"],"names":["styles","weatherIconContainer","display","flex","image","width","height","WeatherIcon","props","weatherIconID","style","src","alt","weatherInfoContainer","flexDirection","justifyContent","marginLeft","locality","fontSize","temperature","fontWeight","windContainer","wind","windSpeed","WeatherInfo","temperatureUnit","windDirection","toFixed","visibility","weatherWidgetContainer","maxWidth","backgroundColor","padding","marginTop","marginBottom","borderRadius","boxShadow","title","contentContainer","WeatherWidget","Loader","active","inline","Form","state","handleInput","bind","preventSubmit","handleTemperatureChange","handleWindChange","event","this","setState","target","value","getTitle","getTemperatureUnit","getWindState","preventDefault","formContainer","form","onSubmit","formItem","label","Input","type","placeholder","onInput","radioButtonContainer","Radio","checked","onChange","radioButton","Component","justifyItems","marginRight","divider","borderLeft","borderLeftColor","margin","Divider","WidgetEditor","windDegreesToCardinalDirection","windDegrees","Math","round","fetchWeatherConditions","toUpperCase","substring","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","axios","get","then","data","name","main","weather","icon","temp","speed","deg","error","code","PERMISSION_DENIED","alert","POSITION_UNAVAILABLE","TIMEOUT","container","border","borderColor","borderBottomLeftRadius","borderBottomRightRadius","overflow","headerBar","HeaderBar","App","appContainer","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef3a16f5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst WeatherIcon = props => {\n  const { weatherIconID } = props;\n\n  return (\n    <div style={styles.weatherIconContainer}>\n      <img\n        src={`https://openweathermap.org/img/wn/${weatherIconID}@2x.png`}\n        style={styles.image}\n        alt=\"Temperature\"\n      />\n    </div>\n  );\n};\n\nconst styles = {\n  weatherIconContainer: { display: \"flex\", flex: 1 },\n  image: { width: \"100%\", height: \"100%\" }\n};\n\nexport default WeatherIcon;\n","import React from \"react\";\n\nconst WeatherInfo = props => {\n  const {\n    locality,\n    temperature,\n    temperatureUnit,\n    windDirection,\n    windSpeed,\n    wind\n  } = props;\n\n  const celsiusToFahrenheit = degreesCelsius => {\n    return (degreesCelsius * 1.8 + 32).toFixed(0);\n  };\n\n  return (\n    <div style={styles.weatherInfoContainer}>\n      <div style={styles.locality}>{locality}</div>\n      <div style={styles.temperature}>\n        {temperature && temperatureUnit === \"Degrees\"\n          ? temperature\n          : celsiusToFahrenheit(temperature)}\n        &#176;\n      </div>\n      <div\n        style={{\n          ...styles.windContainer,\n          visibility: wind === \"On\" ? \"initial\" : \"hidden\"\n        }}\n      >\n        <span style={styles.wind}>Wind &nbsp;</span>\n        <span style={styles.windSpeed}>\n          {windDirection && windDirection} {windSpeed && windSpeed}km/h\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  weatherInfoContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: 1,\n    justifyContent: \"space-around\",\n    marginLeft: \"20px\"\n  },\n  locality: { fontSize: \"18px\" },\n  temperature: { fontSize: \"50px\", fontWeight: \"bold\" },\n  windContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  wind: { fontSize: \"14px\", fontWeight: \"bold\" },\n  windSpeed: { fontSize: \"14px\" }\n};\n\nexport default WeatherInfo;\n","import React from \"react\";\n\n// Semantic UI Components\nimport { Loader } from \"semantic-ui-react\";\n\n// My Components\nimport WeatherIcon from \"./WeatherIcon\";\nimport WeatherInfo from \"./WeatherInfo\";\n\nconst WeatherWidget = props => {\n  const {\n    title,\n    weatherIconID,\n    locality,\n    temperature,\n    temperatureUnit,\n    windDirection,\n    windSpeed,\n    wind\n  } = props;\n\n  return (\n    <div style={styles.weatherWidgetContainer}>\n      <h3 style={styles.title}>{title ? title : \"TITLE OF WIDGET\"}</h3>\n      {weatherIconID ? (\n        <div style={styles.contentContainer}>\n          <WeatherIcon weatherIconID={weatherIconID} />\n          <WeatherInfo\n            locality={locality}\n            temperature={temperature}\n            temperatureUnit={temperatureUnit}\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            wind={wind}\n          />\n        </div>\n      ) : (\n        <Loader active inline=\"centered\" />\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  weatherWidgetContainer: {\n    width: \"100%\",\n    maxWidth: \"302.14px\",\n    backgroundColor: \"white\",\n\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    padding: \"30px\",\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n\n    borderRadius: \"5px\",\n\n    boxShadow:\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n  },\n  title: {\n    marginBottom: \"30px\"\n  },\n  contentContainer: { display: \"flex\", flexDirection: \"row\" }\n};\n\nexport default WeatherWidget;\n","import React, { Component } from \"react\";\n\n// Semantic UI\nimport { Input } from \"semantic-ui-react\";\nimport { Radio } from \"semantic-ui-react\";\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = { title: \"\", temperatureUnit: \"Degrees\", wind: \"On\" };\n    this.handleInput = this.handleInput.bind(this);\n    this.preventSubmit = this.preventSubmit.bind(this);\n    this.handleTemperatureChange = this.handleTemperatureChange.bind(this);\n    this.handleWindChange = this.handleWindChange.bind(this);\n  }\n  handleInput(event) {\n    this.setState({ title: event.target.value });\n    this.props.getTitle(event.target.value);\n  }\n\n  handleTemperatureChange(event, { value }) {\n    this.setState({ temperatureUnit: value });\n    this.props.getTemperatureUnit(value);\n  }\n\n  handleWindChange(event, { value }) {\n    this.setState({ wind: value });\n    this.props.getWindState(value);\n  }\n\n  preventSubmit(event) {\n    /* Prevent submission of the form */\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div style={styles.formContainer}>\n        <form style={styles.form} onSubmit={this.preventSubmit}>\n          <div style={styles.formItem}>\n            <label style={styles.label}>Title</label>\n            <Input\n              type=\"text\"\n              placeholder=\"Title of widget\"\n              value={this.state.title}\n              onInput={this.handleInput}\n            />\n          </div>\n          <div style={styles.formItem}>\n            <label style={styles.label}>Temperature</label>\n            <div style={styles.radioButtonContainer}>\n              <Radio\n                label=\"&#176;C\"\n                value=\"Degrees\"\n                checked={this.state.temperatureUnit === \"Degrees\"}\n                onChange={this.handleTemperatureChange}\n                style={styles.radioButton}\n              />\n              <Radio\n                label=\"&#176;F\"\n                value=\"Fahrenheit\"\n                checked={this.state.temperatureUnit === \"Fahrenheit\"}\n                onChange={this.handleTemperatureChange}\n                style={styles.radioButton}\n              />\n            </div>\n          </div>\n          <div style={styles.formItem}>\n            <label style={styles.label}>Wind</label>\n            <div style={styles.radioButtonContainer}>\n              <Radio\n                label=\"On\"\n                value=\"On\"\n                checked={this.state.wind === \"On\"}\n                onChange={this.handleWindChange}\n                style={styles.radioButton}\n              />\n              <Radio\n                label=\"Off\"\n                value=\"Off\"\n                checked={this.state.wind === \"Off\"}\n                onChange={this.handleWindChange}\n                style={styles.radioButton}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  formContainer: {\n    flex: 1,\n    display: \"flex\"\n  },\n  form: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    flexDirection: \"column\"\n  },\n  formItem: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  label: {\n    marginBottom: \"5px\"\n  },\n  radioButtonContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    justifyItems: \"center\",\n    marginTop: \"5px\",\n    marginRight: \"40%\"\n  },\n  radioButton: {\n    fontSize: \"17px\"\n  }\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Divider = () => {\n  return <div style={styles.divider}></div>;\n};\n\nconst styles = {\n  divider: {\n    width: \"2px\",\n    borderLeft: \"1px solid \",\n    borderLeftColor: \"#c9c9c9\",\n    margin: \"30px\",\n    marginTop: \"40px\",\n    marginBottom: \"40px\",\n    boxShadow: \"0 0 1px 0 white inset, 0 0 1px 0 white\"\n  }\n};\n\nexport default Divider;\n","import React, { Component } from \"react\";\n\n// My Components\nimport WeatherWidget from \"./WeatherWidget/WeatherWidget\";\nimport Form from \"./Form\";\nimport Divider from \"./GeneralComponents/Divider\";\n\n// External Libraries\nimport axios from \"axios\";\n\n// API Key\nimport { API_KEY } from \"../API/weatherAPI\";\n\nclass WidgetEditor extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\",\n      weatherIconID: \"\",\n      locality: \"\",\n      temperatureUnit: \"Degrees\",\n      temperature: \"\",\n      wind: \"On\",\n      windDirection: \"\",\n      windSpeed: \"\"\n    };\n    this.getTitle = this.getTitle.bind(this);\n    this.getTemperatureUnit = this.getTemperatureUnit.bind(this);\n    this.getWindState = this.getWindState.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeatherConditions();\n  }\n\n  getTitle(title) {\n    this.setState({ title: title && title.toUpperCase().substring(0, 16) });\n  }\n\n  getTemperatureUnit(temperatureUnit) {\n    this.setState({ temperatureUnit: temperatureUnit });\n  }\n\n  getWindState(wind) {\n    this.setState({ wind: wind });\n  }\n\n  windDegreesToCardinalDirection = windDegrees => {\n    /* Turns wind direction in degrees into one of the 8 cardinal wind directions */\n    const cardinalDirections = [\n      \"N\",\n      \"NE\",\n      \"E\",\n      \"SE\",\n      \"S\",\n      \"SW\",\n      \"W\",\n      \"NW\",\n      \"N\"\n    ];\n    const compassIndex = Math.round((windDegrees % 360) / 45);\n    return cardinalDirections[compassIndex];\n  };\n\n  async fetchWeatherConditions() {\n    // Check if navigator.geolocation is present because some browsers do not have this capability\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const { latitude, longitude } = position.coords;\n\n          axios\n            .get(\n              `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`\n            )\n            .then(({ data }) => {\n              const { name, main, wind, weather } = data;\n              this.setState({\n                locality: name,\n                weatherIconID: weather && weather[0].icon,\n                temperature: main.temp.toFixed(0),\n                windSpeed: wind.speed.toFixed(0),\n                windDirection: this.windDegreesToCardinalDirection(wind.deg)\n              });\n            });\n        },\n        error => {\n          switch (error.code) {\n            case error.PERMISSION_DENIED:\n              alert(\"User denied the request for Geolocation.\");\n              break;\n            case error.POSITION_UNAVAILABLE:\n              alert(\"Location information is unavailable.\");\n              break;\n            case error.TIMEOUT:\n              alert(\"The request to get user location timed out.\");\n              break;\n            default:\n              alert(\"An unknown error occurred.\");\n              break;\n          }\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={styles.weatherWidgetContainer}>\n          <Form\n            getTitle={this.getTitle}\n            getTemperatureUnit={this.getTemperatureUnit}\n            getWindState={this.getWindState}\n          />\n          <Divider />\n          <WeatherWidget\n            title={this.state.title}\n            weatherIconID={this.state.weatherIconID}\n            locality={this.state.locality}\n            temperature={this.state.temperature}\n            temperatureUnit={this.state.temperatureUnit}\n            windDirection={this.state.windDirection}\n            windSpeed={this.state.windSpeed}\n            wind={this.state.wind}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    justifyItems: \"center\"\n  },\n  weatherWidgetContainer: {\n    width: \"760px\",\n    height: \"380px\",\n    backgroundColor: \"#f5f5f5\",\n\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    justifyItems: \"center\",\n\n    padding: \"55px\",\n\n    border: \"1px solid\",\n    borderColor: \"#c9c9c9\",\n    borderBottomLeftRadius: \"10px\",\n    borderBottomRightRadius: \"10px\"\n  },\n  contentContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    margin: \"40px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    justifyItems: \"center\"\n  }\n};\n\nexport default WidgetEditor;\n","export const API_KEY = \"c6962698473bb5316ec1ea448ce1e814\";\n","import React from \"react\";\n\nconst HeaderBar = () => {\n  return <div style={styles.headerBar}></div>;\n};\n\nconst styles = {\n  headerBar: {\n    maxWidth: \"760px\",\n    width: \"100%\",\n    height: \"4px\",\n    backgroundColor: \"#1876d2\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\"\n  }\n};\n\nexport default HeaderBar;\n","import React, { Component } from \"react\";\n\n// My Components\nimport WidgetEditor from \"./components/WidgetEditor\";\nimport HeaderBar from \"./components/GeneralComponents/HeaderBar\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={styles.appContainer}>\n        <HeaderBar />\n        <WidgetEditor />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  appContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}